syntax = "proto3";

package hivemapper.types.v1;

message Output {
  repeated TokenSplittingPayment token_splitting_payments = 10;
  repeated RegularDriverPayment regular_driver_payments = 20;
  repeated NoSplitPayment no_split_payments = 30;

  repeated AiTrainerPayment ai_trainer_payments = 50;
  repeated OperationalPayment operational_payments = 51;
  repeated RewardPayment reward_payments = 52;
  repeated MapCreate map_create = 53;
  repeated MapConsumptionReward map_consumption_reward = 54;

  repeated Transfer transfers = 60;
  repeated Mint mints = 70;
  repeated Burn burns = 80;

  repeated InitializedAccount initialized_account = 120;
}

message TokenSplittingPayment {
  Mint manager_mint = 1;
  Mint driver_mint = 2;
}

message RegularDriverPayment { Mint mint = 1; }

message NoSplitPayment { Mint mint = 1; }

message AiTrainerPayment { Mint mint = 1; }

message OperationalPayment { Mint mint = 1; }

message Payment { Mint mint = 1; }
message RewardPayment { Mint mint = 1; }
message MapConsumptionReward { Mint mint = 1; }
message MapCreate { Burn burn = 1; }

message Transfer {
  string trx_hash = 1;
  int64 timestamp = 2;
  string from = 3;
  string to = 4;
  double amount = 5;
}

message Mint {
  string trx_hash = 1;
  int64 timestamp = 2;
  string to = 4;
  double amount = 5;
}

message Burn {
  string trx_hash = 1;
  int64 timestamp = 2;
  string from = 3;
  double amount = 5;
}

message InitializedAccount {
  string trx_hash = 1;
  string account = 2;
  string mint = 3;
  string owner = 4;
}
